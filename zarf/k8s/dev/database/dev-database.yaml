apiVersion: v1
kind: Namespace
metadata:
  name: sales-system

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-data
  namespace: sales-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: StatefulSet # we're using a StatefulSet instead of Deployment
metadata:
  name: database
  namespace: sales-system
spec:
  selector:
    matchLabels:
      app: database
  serviceName: database-service
  replicas: 1
  template:
    metadata:
      labels:
        app: database
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: database-data
      containers:
        - name: postgres
          image: postgres:15.3
          volumeMounts:
            - name: data
              # consult the docs to find out when the DB comes up, it's gonna write the data to which location
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "500m" # I need access to 1/2 core on the node.
              memory: 500Mi
            limits:
              cpu: "500m" # Execute instructions 50ms/100ms on my 1/2 core.
              memory: 500Mi
          env:
            - name: POSTGRES_PASSWORD
              value: postgres
          ports:
            - name: postgres
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 5
            timeoutSeconds: 1

---

apiVersion: v1
kind: Service
metadata:
  name: database-service
  namespace: sales-system
spec:
  type: ClusterIP
  selector:
    app: database
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres